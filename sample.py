import random
from word_frequency import unique_words, frequency, histogram

def dict_sample(histogram):
    '''
    dictionary type histogram for stochatic sampling 
    Stochastic sampling means taking an element from a given collection 
    at random based on it's weight
    Returns a random word 
    '''

    frequency = 0
    total_tokens = len(histogram) # unique words 
    random_integer = random.randint(1,total_tokens)

    for key,value in histogram.item():
        # add frequency to determine range 
        frequency += value
        # check if word is within that range 
        if frequency >= random_integer:
            # return the word 
            return key

def list_sample(histogram):
    '''
    list type histogram for stochastic sampling 
    '''

    frequency = 0
    total_tokens = 0
    # iterates through list in histogram 
    for list in histogram:
        # counts unique words 
        total_tokens += list[1]

    random_integer = random.randint(1,total_tokens)
    # iterates through list in histogram to get to index of random_integer 
    for list in histogram:
        # add frequency to determine range 
        frequency += list[1]
        # see if word is within that range 
        if frequency >= random_integer:
            # returns word
            return list[0]


# '''
# calculate range
# add frequency to determine range 
# see if word is in that range 

# take random number 
# find word at the index generated by random number 
# return random word 
# '''

